PathLab Pro - API Documentation
=====================================

Base URL: /api/
Response Format: JSON
Last Updated: 2025-01-08

IMPORTANT: All pages now use AdminLTE3 template with AJAX operations
- All forms are handled via modals
- All data tables use server-side processing
- All CRUD operations use AJAX
- Toaster notifications for all events
- Advanced pagination and filtering

Authentication:
- All API endpoints require valid session
- Returns 401 if not authenticated

Standard Response Format:
{
  "success": true/false,
  "message": "Response message",
  "data": {...},
  "timestamp": "2025-01-07 12:00:00",
  "server_time": 1704628800
}

=== PATIENTS API ===

GET /api/patients_api.php
- Get all patients with pagination
- Parameters: page, limit, search, status
- Returns: patients list with pagination info

POST /api/patients_api.php
- Create new patient
- Required: first_name, last_name, phone
- Optional: email, date_of_birth, gender, address, blood_group, emergency_contact, emergency_phone, medical_history, allergies, status

PUT /api/patients_api.php
- Update existing patient
- Required: id + fields to update
- Fields: first_name, last_name, phone, email, date_of_birth, gender, address, blood_group, emergency_contact, emergency_phone, medical_history, allergies, status

DELETE /api/patients_api.php
- Delete patient
- Required: id

GET /api/patients_api.php?action=get&id={id}
- Get single patient details
- Returns: Complete patient record with all fields

=== DOCTORS API ===

GET /api/doctors_api.php
- Get all doctors with pagination
- Parameters: page, limit, search, status
- Returns: doctors list with pagination info

POST /api/doctors_api.php
- Create new doctor
- Required: name, phone, specialization
- Optional: email, license_number, hospital, address, notes, status

PUT /api/doctors_api.php
- Update existing doctor
- Required: id + fields to update
- Fields: name, phone, specialization, email, license_number, hospital, address, notes, status

DELETE /api/doctors_api.php
- Delete doctor
- Required: id

GET /api/doctors_api.php?action=get&id={id}
- Get single doctor details
- Returns: Complete doctor record with all fields

=== TEST ORDERS API ===

GET /api/test_orders_api.php
- Get all test orders with pagination
- Parameters: page, limit, search, status, patient_id
- Returns: test orders list with pagination info

POST /api/test_orders_api.php
- Create new test order
- Required: patient_id, tests[] (JSON array of test IDs)
- Optional: doctor_id, priority, notes, order_date, discount

PUT /api/test_orders_api.php
- Update test order
- Required: id + fields to update
- Fields: status, priority, notes, discount

DELETE /api/test_orders_api.php
- Cancel test order (sets status to 'cancelled')
- Required: id

GET /api/test_orders_api.php?action=get&id={id}
- Get single test order details
- Returns: Complete order with items and patient/doctor info

=== RESULTS API ===

GET /api/results_api.php
- Get test results with pagination
- Parameters: page, limit, search, status, patient_id, order_id

POST /api/results_api.php
- Add/Update test results
- Required: test_order_id, test_id, result_value
- Optional: comments, is_critical

=== EQUIPMENT API ===

GET /api/equipment_api.php
- Get all equipment with pagination
- Parameters: page, limit, search, status, category
- Returns: equipment list with pagination info

POST /api/equipment_api.php
- Add new equipment
- Required: equipment_name
- Optional: equipment_type, model, serial_number, manufacturer, category, location, purchase_date, warranty_expiry, cost, maintenance_schedule, description, status

PUT /api/equipment_api.php
- Update equipment
- Required: id + fields to update
- Fields: equipment_name, equipment_type, model, serial_number, manufacturer, category, location, purchase_date, warranty_expiry, status, cost, maintenance_schedule, last_maintenance, next_maintenance, description

DELETE /api/equipment_api.php
- Delete equipment
- Required: id

GET /api/equipment_api.php?action=get&id={id}
- Get single equipment details
- Returns: Complete equipment record with all fields

=== USERS API ===

GET /api/users_api.php
- Get all users with pagination
- Parameters: page, limit, search, user_type, status
- Returns: users list with pagination info

POST /api/users_api.php
- Create new user
- Required: name, email, username, password, user_type
- Optional: phone, status

PUT /api/users_api.php
- Update existing user
- Required: id + fields to update
- Fields: name, email, username, user_type, phone, status
- Note: password is optional for updates

DELETE /api/users_api.php
- Delete user
- Required: id

GET /api/users_api.php?action=get&id={id}
- Get single user details
- Returns: Complete user record with all fields

POST /api/users_api.php?action=reset_password
- Reset user password
- Required: user_id, new_password, confirm_password

GET /api/users_api.php?action=export
- Export users data
- Parameters: format (csv, excel, pdf), filters

=== DASHBOARD API ===

GET /api/dashboard_api.php?action=stats
- Get dashboard statistics
- Returns: total_patients, todays_tests, pending_results, total_doctors

GET /api/dashboard_api.php?action=monthly_stats
- Get monthly statistics for charts
- Returns: labels[], values[]

GET /api/dashboard_api.php?action=recent_orders
- Get recent test orders (last 5)
- Returns: recent orders with patient names and status

GET /api/dashboard_api.php?action=alerts
- Get system alerts
- Returns: system alerts with type, title, message, icon

GET /api/get_counts.php
- Get quick counts for dashboard cards (legacy)

GET /api/get_monthly_stats.php
- Get monthly statistics for charts (legacy)

=== SYSTEM API ===

GET /api/system_api.php
- Get system status and settings

POST /api/system_api.php
- Update system settings
- Required: setting_key, setting_value

=== AUTHENTICATION API ===

POST /api/auth_api.php?action=login
- User login
- Required: username, password

POST /api/auth_api.php?action=logout
- User logout

POST /api/auth_api.php?action=change_password
- Change user password
- Required: current_password, new_password

=== REPORTS API ===

GET /api/reports_api.php
- Generate various reports
- Parameters: type, date_from, date_to, format

=== NOTIFICATIONS API ===

GET /api/notifications_api.php
- Get user notifications

POST /api/notifications_api.php
- Mark notifications as read
- Required: notification_ids[]

Error Codes:
- 200: Success
- 400: Bad Request
- 401: Unauthorized
- 403: Forbidden
- 404: Not Found
- 422: Validation Error
- 500: Internal Server Error

Last Updated: 2025-01-07